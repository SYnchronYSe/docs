FORMAT: 1A
HOST: https://api.birdeye.com/resources

# BirdEye

## 1023 [/1023]

+ Model (application/json)

        {
            errorCode: 1023,
            errorMessage: "No email addresses specified"
        }

## 1052 [/1052]

+ Model (application/json)

        {
            errorCode: 1052,
            errorMessage: "User email id cannot be blank"
        }

## 1150 [/1150]

+ Model (application/json)

        {
            errorCode: 1150,
            errorMessage: "Business already associated with this reseller"
        }

## 1151 [/1151]

+ Model (application/json)

        {
            errorCode: 1151,
            errorMessage: "Business already associated with another reseller"
        }

## 1045 [/1045]

+ Model (application/json)

        {
            errorCode: 1045,
            errorMessage: "Business name cannot be blank"
        }

## 1046 [/1046]

+ Model (application/json)

        {
            errorCode: 1046,
            errorMessage: "Business name cannot be more than 250 characters"
        }

## 1047 [/1047]

+ Model (application/json)

        {
            errorCode: 1047,
            errorMessage: "Business name cannot be less than 3 characters"
        }

## 1094 [/1094]

+ Model (application/json)

        {
            errorCode: 1094,
            errorMessage: "Postal code cannot be blank."
        }

## 1030 [/1030]

+ Model (application/json)

        {
            errorCode: 1030,
            errorMessage: "URL cannot be blank"
        }

## 1031 [/1031]

+ Model (application/json)

        {
            errorCode: 1031,
            errorMessage: "Source id cannot be blank"
        }

## 1032 [/1032]

+ Model (application/json)

        {
            errorCode: 1032,
            errorMessage: "Invalid source id"
        }

## 1039 [/1039]

+ Model (application/json)

        {
            errorCode: 1039,
            errorMessage: "Invalid business aggregation id"
        }

## 1067 [/1067]

+ Model (application/json)

        {
            errorCode: 1067,
            errorMessage: "URL is invalid"
        }

## 1075 [/1075]

+ Model (application/json)

        {
            errorCode: 1075,
            errorMessage: "Business location zip cannot be more than 6 numbers"
        }

## 1025 [/1025]

+ Model (application/json)

        {
            errorCode: 1025,
            errorMessage: "Invalid business type"
        }

## 1161 [/1161]

+ Model (application/json)

        {
            errorCode: 1161,
            errorMessage: "Invalid API key"
        }


## 1167 [/1167]

+ Model (application/json)

        {
            errorCode: 1167,
            errorMessage: "API key is missing"
        }

## 89 [/89]
+ Model (application/json)

        {
            errorCode: 89,
            errorMessage: "Rate limit exceeded"
        }

## 1033 [/1033]

+ Model (application/json)

        {
            errorCode: 1033,
            errorMessage: "You are not authorized to perform this action"
        }

## 1175 [/1175]

+ Model (application/json)

        {
            errorCode: 1175,
            errorMessage: "No business found with the given id"
        }

##  1010 [/1010]

+ Model (application/json)

        {
            errorCode: 1010,
            errorMessage: "No user found with the given id"
        }

## 1076 [/1076]

+ Model (application/json)

        {
            errorCode: 1176,
            errorMessage: "Business info cannot be blank"
        }

## 1162 [/1162]

+ Model (application/json)

        {
            errorCode: 1162,
            errorMessage: "Either search string or location or both should be specified"
        }

## 1163 [/1163]

+ Model (application/json)

        {
            errorCode: 1163,
            errorMessage: "Invalid start index value"
        }

## 1164 [/1164]

+ Model (application/json)

        {
            errorCode: 1164,
            errorMessage: "Invalid result count value"
        }

## 1011 [/1011]

+ Model (application/json)

        {
            errorCode: 1011,
            errorMessage: "Business id is invalid"
        }

## 1380 [/1380]

+ Model (application/json)

        {
            errorCode: 1380,
            errorMessage: "Api key or session token missing"
        }

## 1048 [/1048]

+ Model (application/json)

        {
            errorCode: 1048,
            errorMessage: "Business email id cannot be blank."
        }

## 1049 [/1049]

+ Model (application/json)

        {
            errorCode: 1049,
            errorMessage: "Business email id is invalid."
        }

## 1050 [/1050]

+ Model (application/json)

        {
            errorCode: 1050,
            errorMessage: "Business email id cannot be more than 40 characters."
        }

## 1055 [/1055]

+ Model (application/json)

        {
            errorCode: 1055,
            errorMessage: "Not a valid US phone number."
        }

## 1056 [/1056]

+ Model (application/json)

        {
            errorCode: 1056,
            errorMessage: "Not a valid US fax number."
        }


## 1069 [/1069]

+ Model (application/json)

        {
            errorCode: 1069,
            errorMessage: "Business description cannot be more than 4000 characters."
        }

## 1070 [/1070]

+ Model (application/json)

        {
            errorCode: 1070,
            errorMessage: "Business keywords cannot be more than 1000 characters."
        }

## 1089 [/1089]

+ Model (application/json)

        {
            errorCode: 1089,
            errorMessage: "Customer id is invalid."
        }

## 1091 [/1091]

+ Model (application/json)

        {
            errorCode: 1091,
            errorMessage: "User id not authorized to view this customer."
        }

## 1190 [/1190]

+ Model (application/json)

        {
            errorCode: 1190,
            errorMessage: "Invalid category"
        }

## 1184 [/1184]

+ Model (application/json)

        {
            errorCode: 1184,
            errorMessage: "Status change is not allowed"
        }

## 1191 [/1191]

+ Model (application/json)

        {
            errorCode: 1191,
            errorMessage: "Invalid status."
        }

## 1174 [/1174]

+ Model (application/json)

        {
            errorCode: 1174,
            errorMessage: "Reseller can't be removed as it has child accounts."
        }

## 1160 [/1160]

+ Model (application/json)

        {
            errorCode: 1160,
            errorMessage: "User is already associated with business."
        }

## 1053 [/1053]

+ Model (application/json)

        {
            errorCode: 1053,
            errorMessage: "User email id is invalid"
        }

## 1054 [/1054]

+ Model (application/json)

        {
            errorCode: 1054,
            errorMessage: "User email id cannot be more than 40 characters"
        }

## 1014 [/1014]

+ Model (application/json)

        {
            errorCode: 1014,
            errorMessage: "User role cannot be blank"
        }


## 1013 [/1013]

+ Model (application/json)

        {
            errorCode: 1013,
            errorMessage: "Unknown user role"
        }


## 1057 [/1057]

+ Model (application/json)

        {
            errorCode: 1057,
            errorMessage: "First name cannot be more than 50 characters"
        }

## 1059 [/1059]

+ Model (application/json)

        {
            errorCode: 1059,
            errorMessage: "Last name cannot be more than 50 characters"
        }

## 1188 [/1188]

+ Model (application/json)

        {
            errorCode: 1188,
            errorMessage: "User is not associated with the business."
        }


## 1189 [/1189]

+ Model (application/json)

        {
            errorCode: 1189,
            errorMessage: "User with given email id not found."
        }

## 1177 [/1177]

+ Model (application/json)

        {
            errorCode: 1177,
            errorMessage: "User is not authorized to perform any action on any business"
        }

## 1081 [/1081]

+ Model (application/json)

        {
            errorCode: 1081,
            errorMessage: "Review comment is too long"
        }


## 1082 [/1082]

+ Model (application/json)

        {
            errorCode: 1082,
            errorMessage: "Review rating is missing"
        }

## 1142 [/1142]

+ Model (application/json)

        {
            errorCode: 1142,
            errorMessage: "Customer name cannot be blank"
        }


## 1086 [/1086]

+ Model (application/json)

        {
            errorCode: 1086,
            errorMessage: "Customer email id cannot be blank."
        }

## 1087 [/1087]

+ Model (application/json)

        {
            errorCode: 1087,
            errorMessage: "Customer email id is invalid."
        }

## 1088 [/1088]

+ Model (application/json)

        {
            errorCode: 1088,
            errorMessage: "Customer email id cannot be more than 40 characters."
        }

## 1170 [/1170]

+ Model (application/json)

        {
            errorCode: 1170,
            errorMessage: "SMS Alert flag is invalid. Valid values are 0 or 1."
        }

## 1242 [/1242]

+ Model (application/json)

        {
            errorCode: 1242,
            errorMessage: "Invalid rating value. Allowed value between 0-5."
        }

## 1243 [/1243]

+ Model (application/json)

        {
            errorCode: 1243,
            errorMessage: "Invalid rating value. Allowed value between 1-5."
        }

## 1244 [/1244]

+ Model (application/json)

        {
            errorCode: 1244,
            errorMessage: "Maximum 5 keywords can be selected for filter."
        }

## 1246 [/1246]

+ Model (application/json)

        {
            errorCode: 1246,
            errorMessage: "Customer email or phone number is required."
        }

## 1215 [/1215]

+ Model (application/json)

        {
            errorCode: 1215,
            errorMessage: "Invalid report month."
        }

## 1251 [/1251]

+ Model (application/json)

        {
            errorCode: 1251,
            errorMessage: "No review to mark featured/un-featured."
        }

## 1042 [/1042]

+ Model (application/json)

        {
            errorCode: 1042,
            errorMessage: "Invalid review id"
        }

## 1252 [/1252]

+ Model (application/json)

        {
            errorCode: 1252,
            errorMessage: "Review does not belong to the business."
        }

## 1248 [/1248]

+ Model (application/json)

        {
            errorCode: 1248,
            errorMessage: "Allowed limit for featured reviews exceeded."
        }

## 1186 [/1186]

+ Model (application/json)

        {
            errorCode: 1186,
            errorMessage: "Invalid from date. Allowed format is "MM/dd/yyyy"."
        }

## 1187 [/1187]

+ Model (application/json)

        {
            errorCode: 1187,
            errorMessage: "Invalid to date. Allowed format is "MM/dd/yyyy"."
        }

## 1265 [/1265]

+ Model (application/json)

        {
            errorCode: 1265,
            errorMessage: "Value for showOnFacebook is mandatory."
        }

## 1266 [/1266]

+ Model (application/json)

        {
            errorCode: 1266,
            errorMessage: "Value for showOnProfile is mandatory."
        }

## 1267 [/1267]

+ Model (application/json)

        {
            errorCode: 1267,
            errorMessage: "Value for showOnWebsite is mandatory."
        }

## 1268 [/1268]

+ Model (application/json)

        {
            errorCode: 1268,
            errorMessage: "TabType is mandatory field."
        }

## 1269 [/1269]

+ Model (application/json)

        {
            errorCode: 1269,
            errorMessage: "Max length for lable is 30."
        }

## 1270 [/1270]

+ Model (application/json)

        {
            errorCode: 1270,
            errorMessage: "Max length for URL is 1000."
        }

## 1360 [/1360]

+ Model (application/json)

        {
            errorCode: 1360,
            errorMessage: "Hierarchy is not supported for this parent type."
        }

## 1361 [/1361]

+ Model (application/json)

        {
            errorCode: 1361,
            errorMessage: "Hierarchy is not supported for this child type."
        }

## 1362 [/1362]

+ Model (application/json)

        {
            errorCode: 1362,
            errorMessage: "{Child type} cannot be added under {Parent type}."
        }

## 1363 [/1363]

+ Model (application/json)

        {
            errorCode: 1363,
            errorMessage: "Invalid parent child mapping."
        }


## 1029 [/1029]

+ Model (application/json)

        {
            errorCode: 1029,
            errorMessage: "Aggregation source not found"
        }

## 1315 [/1315]

+ Model (application/json)

        {
            errorCode: 1315,
            errorMessage: "Invalid survey."
        }

## 1523 [/1523]

+ Model (application/json)

        {
            errorCode: 1523,
            errorMessage: "The correct date format should be mm/dd/yyyy."
        }

## 1524 [/1524]

+ Model (application/json)

        {
            errorCode: 1524,
            errorMessage: "Date entered is invalid."
        }

## 2110 [/2110]

+ Model (application/json)

        {
            errorCode: 2110,
            errorMessage: "Your review response could not be submitted due to a temporary error on Google. Please try after some time."
        }

## 21101 [/21101]

+ Model (application/json)

        {
            errorCode: 21101,
            errorMessage: "Google page is not integrated. Kindly integrate it first."
        }

## 21103 [/21103]

+ Model (application/json)

        {
            errorCode: 21103,
            errorMessage: "Your review response could not be submitted due to a temporary error on Google."
        }

## 21104 [/21104]

+ Model (application/json)

        {
            errorCode: 21104,
            errorMessage: "Sorry, We could not find this review on Google. Please go to your Google Business page and reply to this review. Thank you."
        }

## 2111 [/2111]

+ Model (application/json)

        {
            errorCode: 2111,
            errorMessage: "Your review response could not be submitted due to a temporary error on Facebook. Please try after some time."
        }

## 21113 [/21113]

+ Model (application/json)

        {
            errorCode: 21113,
            errorMessage: "Facebook page is not integrated. Kindly integrate it first."
        }

## 21114 [/21114]

+ Model (application/json)

        {
            errorCode: 21114,
            errorMessage: "Sorry, We could not find this review on Facebook. Please go to your Facebook page and reply to this review. Thank you."
        }

## 21112 [/21112]

+ Model (application/json)

        {
            errorCode: 21112,
            errorMessage: "Your review response could not be submitted due to a temporary error on Facebook."
        }

## 2222 [/2222]

+ Model (application/json)

        {
            errorCode: 2222,
            errorMessage: "Oops! Something is off on our side. We are working on it. Please check later."
        }

## 2075 [/2075]

+ Model (application/json)

        {
            errorCode: 2075,
            errorMessage: "Error while claiming a provider for Care Dash"
        }

## 20706 [/20706]

+ Model (application/json)

        {
            errorCode: 20706,
            errorMessage: "Error while posting a reply to Care Dash"
        }

## 2078 [/2078]

+ Model (application/json)

        {
            errorCode: 2078,
            errorMessage: "Error while posting a reply to Rent"
        }

## 1541 [/1541]

+ Model (application/json)

        {
            errorCode: 1541,
            errorMessage: "Rate Limit of API has been exceeded."
        }

## 1532 [/1532]

+ Model (application/json)

        {
            errorCode: 1532,
            errorMessage: "Business id is missing or invalid."
        }

## 5008 [/5008]

+ Model (application/json)

        {
            errorCode: 5008,
            errorMessage: "RequestBody not found"
        }
        
## 5043 [/5043]

+ Model (application/json)

        {
            errorCode: 5043,
            errorMessage: "Contact not found for the given request"
        }

## 2038 [/2038]

+ Model (application/json)

        {
            errorCode: 2038,
            errorMessage: "Invalid value of role, expected editor, viewer or no-access"
        }
        
## 2041 [/2041]

+ Model (application/json)

        {
            errorCode: 2041,
            errorMessage: "Can't modify owner or existing owner's access!"
        }

## 2039 [/2039]

+ Model (application/json)

        {
            errorCode: 2039,
            errorMessage: "User email is missing in user access request!"
        }
        
## 2043 [/2043]

+ Model (application/json)

        {
            errorCode: 2043,
            errorMessage: "Invalid value of showTitle, accepted values are CUSTOM, LOCATION, OFF"
        }

## 2090 [/2090]

+ Model (application/json)

        {
            errorCode: 2090,
            errorMessage: "Invalid value of showLogo, accepted values are ON, OFF"
        }

## 2040 [/2040]

+ Model (application/json)

        {
            errorCode: 2040,
            errorMessage: "Invalid value of progress bar position, expected Bottom or Top"
        }

## 2042 [/2042]

+ Model (application/json)

        {
            errorCode: 2042,
            errorMessage: "Received no valid inputs in request body!"
        }
        
## 2037 [/2037]

+ Model (application/json)

        {
            errorCode: 2037,
            errorMessage: "The survey doesn't belong to the account."
        }
        
## 2044 [/2044]

+ Model (application/json)

        {
            errorCode: 2044,
            errorMessage: "Survey already completed"
        }

## 2093 [/2093]

+ Model (application/json)

        {
            errorCode: 2093,
            errorMessage: "Survey Field Type passed is unknown"
        }

## 2045 [/2045]

+ Model (application/json)

        {
            errorCode: 2045,
            errorMessage: "Invalid Survey Type"
        }

## 2046 [/2046]

+ Model (application/json)

        {
            errorCode: 2046,
            errorMessage: "Min Value is greater then Max Value"
        }

## 2047 [/2047]

+ Model (application/json)

        {
            errorCode: 2047,
            errorMessage: "Survey Fields Missing!"
        }

## 2048 [/2048]

+ Model (application/json)

        {
            errorCode: 2048,
            errorMessage: "Field Rows Missing"
        }

## 2049 [/2049]

+ Model (application/json)

        {
            errorCode: 2049,
            errorMessage: "Interval can only be 30 min or 60 min"
        }

## 2050 [/2050]

+ Model (application/json)

        {
            errorCode: 2050,
            errorMessage: "More than one location question cannot be present"
        }

## 2051 [/2051]

+ Model (application/json)

        {
            errorCode: 2051,
            errorMessage: "More than one review question cannot be present"
        }

## 2052 [/2052]

+ Model (application/json)

        {
            errorCode: 2052,
            errorMessage: "Review question should be present in the last page of the survey as a single question"
        }

## 2053 [/2053]

+ Model (application/json)

        {
            errorCode: 2053,
            errorMessage: "Contact Fields are not present"
        }

## 2054 [/2054]

+ Model (application/json)

        {
            errorCode: 2054,
            errorMessage: "Min Value out of range"
        }

## 2055 [/2055]

+ Model (application/json)

        {
            errorCode: 2055,
            errorMessage: "Max Value out of range"
        }

## 2056 [/2056]

+ Model (application/json)

        {
            errorCode: 2056,
            errorMessage: "Min and Max values can only be even numbers when the interval is 60 minutes"
        }

## 2057 [/2057]

+ Model (application/json)

        {
            errorCode: 2057,
            errorMessage: "Either one of Min and Max values is missing in datetime type question"
        }

## 2058 [/2058]

+ Model (application/json)

        {
            errorCode: 2058,
            errorMessage: "LocationIds are not present"
        }

## 2059 [/2059]

+ Model (application/json)

        {
            errorCode: 2059,
            errorMessage: "Invalid type of contact question"
        }

## 2060 [/2060]

+ Model (application/json)

        {
            errorCode: 2060,
            errorMessage: "reviewSources are not present for review type question"
        }

## 2061 [/2061]

+ Model (application/json)

        {
            errorCode: 2061,
            errorMessage: "Pickone type of survey can only contain pickone type questions"
        }

## 2062 [/2062]

+ Model (application/json)

        {
            errorCode: 2062,
            errorMessage: "Traditional type survey cannot contain these type questions"
        }

## 2063 [/2063]

+ Model (application/json)

        {
            errorCode: 2063,
            errorMessage: "Pulse(NPS) Survey can only contain radio, text, textarea(paragraph), rating and nps type questions"
        }

## 2064 [/2064]

+ Model (application/json)

        {
            errorCode: 2064,
            errorMessage: "First page of the survey must contain atleast one question except review question"
        }

## 2065 [/2065]

+ Model (application/json)

        {
            errorCode: 2065,
            errorMessage: "There cannot be more than 3 sourceIds for review question"
        }

## 2066 [/2066]

+ Model (application/json)

        {
            errorCode: 2066,
            errorMessage: "BusinessIds passed in the location type question are invalid"
        }

## 2067 [/2067]

+ Model (application/json)

        {
            errorCode: 2067,
            errorMessage: "One of the locations passed in the request is not present"
        }

## 2068 [/2068]

+ Model (application/json)

        {
            errorCode: 2068,
            errorMessage: "The locationIds are Non-Parseable"
        }

## 2069 [/2069]

+ Model (application/json)

        {
            errorCode: 2069,
            errorMessage: "surveyName is Mandatory"
        }

## 2070 [/2070]

+ Model (application/json)

        {
            errorCode: 2070,
            errorMessage: "Question Type cannot be blank"
        }

## 2071 [/2071]

+ Model (application/json)

        {
            errorCode: 2071,
            errorMessage: "Invalid ownerEmailId"
        }

## 2072 [/2072]

+ Model (application/json)

        {
            errorCode: 2072,
            errorMessage: "Choice cannot be a blank string"
        }

## 2073 [/2073]

+ Model (application/json)

        {
            errorCode: 2073,
            errorMessage: "Logic type is Invalid!"
        }

## 2074 [/2074]

+ Model (application/json)

        {
            errorCode: 2074,
            errorMessage: "Cannot contain a logic"
        }

## 2092 [/2092]

+ Model (application/json)

        {
            errorCode: 2092,
            errorMessage: "Invalid Logic!"
        }

## 2076 [/2076]

+ Model (application/json)

        {
            errorCode: 2076,
            errorMessage: "Value of the logic is not present in the choices of Question"
        }

## 2077 [/2077]

+ Model (application/json)

        {
            errorCode: 2077,
            errorMessage: "Value of a questionLogic field cannot be blank"
        }

## 2091 [/2091]

+ Model (application/json)

        {
            errorCode: 2091,
            errorMessage: "Operator Invalid"
        }

## 2079 [/2079]

+ Model (application/json)

        {
            errorCode: 2079,
            errorMessage: "Only one Skip logic is allowed for text and textarea type questions"
        }

## 2080 [/2080]

+ Model (application/json)

        {
            errorCode: 2080,
            errorMessage: "Display Logic Invalid!"
        }

## 2081 [/2081]

+ Model (application/json)

        {
            errorCode: 2081,
            errorMessage: "Skip Logic Invalid!"
        }

## 2082 [/2082]

+ Model (application/json)

        {
            errorCode: 2082,
            errorMessage: "The API returned an empty response."
        }

## 2083 [/2083]

+ Model (application/json)

        {
            errorCode: 2083,
            errorMessage: "Source is not integrated with the business"
        }

## 2084 [/2084]

+ Model (application/json)

        {
            errorCode: 2084,
            errorMessage: "Opeartor must be present for logics other than the first display logic"
        }

## 2085 [/2085]

+ Model (application/json)

        {
            errorCode: 2085,
            errorMessage: "Condition cannot be null!"
        }

## 2086 [/2086]

+ Model (application/json)

        {
            errorCode: 2086,
            errorMessage: "Question Number cannot be null"
        }

## 2087 [/2087]

+ Model (application/json)

        {
            errorCode: 2087,
            errorMessage: "Duplicate contact sub type question is present"
        }

## 2088 [/2088]

+ Model (application/json)

        {
            errorCode: 2088,
            errorMessage: "Review Source already present"
        }

## 2094 [/2094]

+ Model (application/json)

        {
            errorCode: 2094,
            errorMessage: "ReviewSources passed are invalid"
        }
        
## 2095 [/2095]

+ Model (application/json)

        {
            errorCode: 2095,
            errorMessage: "ownerEmailId cannot be null"
        }
        
## 2096 [/2096]

+ Model (application/json)

        {
            errorCode: 2096,
            errorMessage: "Detected conflicting user-access request!"
        }

# Group Survey

## Create Survey [/v1/survey/external/create/{businessId}{?api_key}]
Create a new survey

+ Parameters

    + businessId (string, required) ... long ID of enterprise/SMB
    + api_key (string, required) ... API key

### Create Survey [POST]

#### Request

<center><b>Example cURL request</b></center>
<pre><code>
curl --location --request POST 'https://api.birdeye.com/resources/v1/survey/external/create/123456789012345?api_key=********' \
--header 'Content-Type: application/json' \
--data-raw '{
    "surveyName": "Experience Survey",
    "thankYouMessage": "Thank you for taking the survey!",
    "surveyType": "traditional",
    "ownerEmailId": "testmail@gmail.com",
    "pages": [
        {
            "questions": [
                {
                    "title": "Text1",
                    "type": "text"
                },
                {
                    "title": "Paragraph",
                    "type": "textarea"
                }
            ]
        },
        {
            "title": "Page 2-optional",
            "questions": [
                {
                    "title": "Questionnumber1",
                    "type": "checkbox",
                    "required": true,
                    "choices": [
                        "Choice 1",
                        "Choice 2",
                        "Choice 3"
                    ]
                },
                {
                    "title": "Q2",
                    "type": "dropdown",
                    "choices": [
                        "Dropdown 1",
                        "Dropdown 2",
                        "Dropdown 3"
                    ]
                },
                {
                    "title": "ratingQn",
                    "type": "rating",
                    "minLabel": "Strongly Disagree",
                    "maxLabel": "Strongly Agree",
                    "maxValue": 10
                }
            ]
        },
        {
            "questions": [
                {
                    "title": "P3-Q1-Radio",
                    "type": "radio",
                    "choices": [
                        "radio 1",
                        "radio 2",
                        "radio 3"
                    ]
                },
                {
                    "title": "npsQn",
                    "type": "nps",
                    "minLabel": "Strongly Disagree"
                }
            ]
        },
        {
            "questions": [
                {
                    "title": "Datetime question",
                    "type": "datetime",
                    "required": true,
                    "showTime": true,
                    "showDate": true,
                    "interval": 60,
                    "minValue": "12",
                    "maxValue": "36"
                },
                {
                    "title": "Please enter your contact information",
                    "type": "contact",
                    "required": true,
                    "contactRows": [
                        {
                            "required": true,
                            "title": "First name",
                            "type": "text"
                        },
                        {
                            "required": true,
                            "title": "Email",
                            "type": "email"
                        },
                        {
                            "required": true,
                            "title": "Phone",
                            "type": "phone"
                        }
                    ]
                }
            ]
        },
        {
            "title": "Page 4",
            "questions": [
                {
                    "title": "P4-Q1",
                    "type": "matrixrating",
                    "minLabel": "Strongly Disagree",
                    "maxLabel": "Strongly Agree",
                    "maxValue": 5,
                    "rows": [
                        "Row label 1",
                        "Row label 2"
                    ]
                },
                {
                    "title": "P4-Q2",
                    "type": "matrixradio",
                    "required": true,
                    "choices": [
                        "c1",
                        "c2",
                        "c3"
                    ],
                    "rows": [
                        "Row 1",
                        "Row2"
                    ]
                },
                {
                    "title": "p4-Q3",
                    "type": "matrixdropdown",
                    "required": true,
                    "choices": [
                        "c1",
                        "c2",
                        "c3"
                    ],
                    "rows": [
                        "Row label 1",
                        "Row label 2"
                    ]
                },
                {
                    "title": "Label type ques",
                    "type": "label"
                }
            ]
        },
        {
            "questions": [
                {
                    "title": "please review us on one of these sites",
                    "type": "review",
                    "required": true,
                    "contactUsMessage": "ContactUs test message",
                    "reviewSources": ["Google","Facebook","CitySearch"
                    ]
                }
            ]
        }
    ]
}'
</code></pre>

#### Response                
                    {
                        "surveyId": 1234
                    }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1380</td>
            <td>Api key or session token missing</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2044</td>
            <td>Survey already completed</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2093</td>
            <td>Survey Field Type passed is unknown</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2045</td>
            <td>Invalid Survey Type</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2046</td>
            <td>Min Value is greater then Max Value</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2047</td>
            <td>Survey Fields Missing!</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2048</td>
            <td>Field Rows Missing</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2049</td>
            <td>Interval can only be 30 min or 60 min</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2050</td>
            <td>More than one location question cannot be present</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2051</td>
            <td>More than one review question cannot be present</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2052</td>
            <td>Review question should be present in the last page of the survey as a single question</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2053</td>
            <td>Contact Fields are not present</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2054</td>
            <td>Min Value out of range</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2055</td>
            <td>Max Value out of range</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2056</td>
            <td>Min and Max values can only be even numbers when the interval is 60 minutes</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2057</td>
            <td>Either one of Min and Max values is missing in datetime type question</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2058</td>
            <td>LocationIds are not present</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2059</td>
            <td>Invalid type of contact question</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2060</td>
            <td>reviewSources are not present for review type question</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2061</td>
            <td>Pickone type of survey can only contain pickone type questions</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2062</td>
            <td>Traditional type survey cannot contain these type questions</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2063</td>
            <td>Pulse(NPS) Survey can only contain radio, text, textarea(paragraph), rating and nps type questions</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2064</td>
            <td>First page of the survey must contain atleast one question except review question</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2065</td>
            <td>There cannot be more than 3 sourceIds for review question</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2066</td>
            <td>BusinessIds passed in the location type question are invalid</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2067</td>
            <td>One of the locations passed in the request is not present</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2068</td>
            <td>The locationIds are Non-Parseable</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2069</td>
            <td>surveyName is Mandatory</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2070</td>
            <td>Question Type cannot be blank</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2071</td>
            <td>Invalid ownerEmailId</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2072</td>
            <td>Choice cannot be a blank string</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2073</td>
            <td>Logic type is Invalid!</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2074</td>
            <td>Cannot contain a logic</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2092</td>
            <td>Invalid Logic!</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2076</td>
            <td>Value of the logic is not present in the choices of Question</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2077</td>
            <td>Value of a questionLogic field cannot be blank</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2091</td>
            <td>Operator Invalid</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2079</td>
            <td>Only one Skip logic is allowed for text and textarea type questions</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2080</td>
            <td>Display Logic Invalid!</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2081</td>
            <td>Skip Logic Invalid!</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2082</td>
            <td>The API returned an empty response.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2083</td>
            <td>Source is not integrated with the business</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2084</td>
            <td>Opeartor must be present for logics other than the first display logic</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2085</td>
            <td>Condition cannot be null!</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2086</td>
            <td>Question Number cannot be null</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2087</td>
            <td>Duplicate contact sub type question is present</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2088</td>
            <td>Review Source already present</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2094</td>
            <td>ReviewSources passed are invalid</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2095</td>
            <td>ownerEmailId cannot be null</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Body

              {
                  "surveyId": 1234
              }


+ Response 401

    [1161][]

+ Response 401

    [1380][]

+ Response 429

    [89][]

+ Response 404

    [1011][]

+ Response 400

    [2044][]
    
+ Response 400

    [2093][]

+ Response 400

    [2045][]
    
+ Response 400

    [2046][]
    
+ Response 400

    [2047][]
    
+ Response 400

    [2048][]
    
+ Response 400

    [2049][]
    
+ Response 400

    [2050][]
    
+ Response 400

    [2051][]
    
+ Response 400

    [2052][]
    
+ Response 400

    [2053][]
    
+ Response 400

    [2054][]
    
+ Response 400

    [2055][]
    
+ Response 400

    [2056][]
    
+ Response 400

    [2057][]
    
+ Response 400

    [2058][]
    
+ Response 400

    [2059][]
    
+ Response 400

    [2060][]
    
+ Response 400

    [2061][]
    
+ Response 400

    [2062][]
    
+ Response 400

    [2063][]
    
+ Response 400

    [2064][]
    
+ Response 400

    [2065][]
    
+ Response 400

    [2066][]
    
+ Response 400

    [2067][]
    
+ Response 400

    [2068][]
    
+ Response 400

    [2069][]
    
+ Response 400

    [2070][]
    
+ Response 400

    [2071][]
    
+ Response 400

    [2072][]
    
+ Response 400

    [2073][]
    
+ Response 400

    [2074][]
    
+ Response 400

    [2092][]
    
+ Response 400

    [2076][]
    
+ Response 400

    [2077][]
    
+ Response 400

    [2091][]
    
+ Response 400

    [2079][]
    
+ Response 400

    [2080][]
    
+ Response 400

    [2081][]
    
+ Response 400

    [2082][]
    
+ Response 400

    [2083][]
    
+ Response 400

    [2084][]
    
+ Response 400

    [2085][]
    
+ Response 400

    [2086][]
    
+ Response 400

    [2087][]
    
+ Response 400

    [2088][]
    
+ Response 400

    [2094][]

+ Response 400

    [2095][]


## Update Settings [/v1/survey/{surveyId}/settings/update{?api_key,businessId}]
Update the settings of an existing survey - appearance, access control, auto-reply

+ Parameters

    + api_key (string, required) ... API key
    + businessId (string, required) ... long ID of enterprise/SMB

### Update Survey Settings [POST]

#### Request

<center><b>Example cURL request</b></center>

   curl --location --request POST 'https://api.birdeye.com/resources/v1/survey/1234/settings/update?api_key=*****************&businessId=1234567890' \
--header 'Content-Type: application/json' \
--data-raw '{
  "surveySettings": {
    "showSurveyTitle": false,
    "showQuestionNumber": false,
    "showProgressBar": false,
    "progressbarPosition": null,
    "showLogo": "ON",
    "showTitle": "CUSTOM",
    "customTitle": "Welcome to Tennessee!",
    "themeColor": "#1976d2",
    "themeTextColor": "#ffffff",
    "subject": "Thank you for taking the survey",
    "message": "Hi , \nThank you for taking the time to give your inputs on the survey.",
    "signature": "Sincerely, \nBMW_Survey \n",
    "enableThankyouEmail": true
  },
  "accessControl": {
    "userAccessList": [
      {
        "userEmail": "naveen.gupta@birdeye.com",
        "role": "viewer"
      },
      {
        "userEmail": "neeraj.gupta@birdeye.com",
        "delete" : true
      }
    ],
  "surveyAccess": {
            "role": "editor"
        }
    }
}'

#### Response                
                    {
                        "surveyId": 1234,
                        "surveySettingId": 12345
                    }

<div class="paramsTableWrap">
    <table class="paramsTable">
        <caption>Error Codes</caption>
        <thead>
        <tr>
            <th>HTTP Status</th>
            <th>BirdEye error code</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>401 Unauthorized</td>
            <td>1380</td>
            <td>Api key or session token missing</td>
        </tr>
        <tr>
            <td>401 Unauthorized</td>
            <td>1161</td>
            <td>Invalid API key</td>
        </tr>
        <tr>
            <td>429 Too Many Requests</td>
            <td>89</td>
            <td>Rate limit exceeded</td>
        </tr>
        <tr>
            <td>404 Not Found</td>
            <td>1011</td>
            <td>Business id is invalid</td>
        </tr>
                <tr>
            <td>404 Not Found</td>
            <td>1175</td>
            <td>No business found with the given id</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>1315</td>
            <td>Invalid Survey</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2037</td>
            <td>The survey doesn't belong to the account.</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2042</td>
            <td>Received no valid inputs in request body!</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2040</td>
            <td>Invalid value of progress bar position, expected Bottom or Top</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2090</td>
            <td>Invalid value of showLogo, accepted values are ON, OFF</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2043</td>
            <td>Invalid value of showTitle, accepted values are CUSTOM, LOCATION, OFF</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2039</td>
            <td>User email is missing in user access request!</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2038</td>
            <td>Invalid value of role, expected editor, viewer or no-access for user : XXXX</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2041</td>
            <td>Can't modify owner or existing owner's access!</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2038</td>
            <td>Invalid value of role, expected editor, viewer or no-access for survey default access</td>
        </tr>
        <tr>
            <td>400 Bad Request</td>
            <td>2096</td>
            <td>Detected conflicting user-access request!</td>
        </tr>
        </tbody>
    </table>
</div>

+ Request (application/json)

    + Headers

            Accept: application/json

+ Response 200

    + Body

              {
                  "surveyId": 1234,
                  "suveySettingId" : 12345
              }


+ Response 401

    [1380][]

+ Response 404

    [1161][]

+ Response 401

    [89][]

+ Response 400

    [1011][]

+ Response 404

    [1175][]
    
+ Response 400

    [1315][]
    
+ Response 400

    [2037][]
        
+ Response 400

    [2042][]
        
+ Response 400

    [2040][]
        
+ Response 400

    [2090][]
        
+ Response 400

    [2043][]
        
+ Response 400

    [2039][]
        
+ Response 400

    [2038][]
        
+ Response 400

    [2041][]

+ Response 400

    [2096][]
